name: TestCoverage2

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 3

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true    

    - name: setup dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ccache \
          cmake lcov qt5-default qttools5-dev libqt5svg5-dev qtdeclarative5-dev libx11-xcb1
        
    - name: ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
        
    - name: ccache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: qtmvvm-coverage-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          qtmvvm-coverage-ccache-
          
    - name: build
      env:
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache
        CCACHE_COMPRESS: "true"
        CCACHE_COMPRESSLEVEL: "6"
        CCACHE_MAXSIZE: "400M"
        QT_QPA_PLATFORM: offscreen        
      run: |
        cd $GITHUB_WORKSPACE && pwd && ls
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Debug -DMVVM_SETUP_CODECOVERAGE=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ../
        make coverage -j4        
        
    - name: Uploading to codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./coverage.info
        verbose: true # optional (default = false)
